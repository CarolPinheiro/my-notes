"use strict";(self.webpackChunkdev_docs=self.webpackChunkdev_docs||[]).push([[929],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var o=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,i=function(e,t){if(null==e)return{};var r,o,i={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=o.createContext({}),l=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),u=i,m=d["".concat(p,".").concat(u)]||d[u]||y[u]||n;return r?o.createElement(m,a(a({ref:t},c),{},{components:r})):o.createElement(m,a({ref:t},c))}));function u(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,a=new Array(n);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var l=2;l<n;l++)a[l]=r[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1559:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>y,frontMatter:()=>n,metadata:()=>s,toc:()=>l});var o=r(7462),i=(r(7294),r(3905));r(8209);const n={slug:"/typescript/utility-types",title:"Utility Types",sidebar_position:0,tags:["typescript","node"]},a="Utility Types",s={unversionedId:"typescript/utility-types",id:"typescript/utility-types",title:"Utility Types",description:"Anota\xe7\xf5es feitas com base na palestra",source:"@site/docs/typescript/utility-types.md",sourceDirName:"typescript",slug:"/typescript/utility-types",permalink:"/my-notes/typescript/utility-types",draft:!1,editUrl:"https://github.com/carolpinheiro/my-notes/edit/main/docs/typescript/utility-types.md",tags:[{label:"typescript",permalink:"/my-notes/tags/typescript"},{label:"node",permalink:"/my-notes/tags/node"}],version:"current",lastUpdatedBy:"Carol Pinheiro",lastUpdatedAt:1672938494,formattedLastUpdatedAt:"Jan 5, 2023",sidebarPosition:0,frontMatter:{slug:"/typescript/utility-types",title:"Utility Types",sidebar_position:0,tags:["typescript","node"]},sidebar:"docs",previous:{title:"Algumas informa\xe7\xf5es interessantes",permalink:"/my-notes/shell/teoria"}},p={},l=[{value:"Partial<code>&lt;type&gt;</code>",id:"partialtype",level:2},{value:"Required <code>&lt;type&gt;</code>",id:"required-type",level:2},{value:"Pick<code>&lt;Type, Keys&gt;</code>",id:"picktype-keys",level:2},{value:"Omit<code>&lt;Type, Keys&gt;</code>",id:"omittype-keys",level:2},{value:"Record<code>&lt;Keys,Type&gt;</code>",id:"recordkeystype",level:2}],c={toc:l};function y(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"utility-types"},"Utility Types"),(0,i.kt)("p",null,"Anota\xe7\xf5es feitas com base na palestra\n",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=V2D8IghrsgQ",title:"@embed"},"Typescript - Utility Types")),(0,i.kt)("h2",{id:"partialtype"},"Partial",(0,i.kt)("inlineCode",{parentName:"h2"},"<type>")),(0,i.kt)("p",null,"O tipo que voc\xea declara dentro das chaves, se torna opcional. Ent\xe3o por exemplo se tivermos uma interface User, tudo dentro dele se torna opcional (nome, e-mail, etc)."),(0,i.kt)("h2",{id:"required-type"},"Required ",(0,i.kt)("inlineCode",{parentName:"h2"},"<type>")),(0,i.kt)("p",null,"O tipo declarado dentro das chaves, ao contr\xe1rio do Partial se torna totalmente obrigat\xf3rio, mesmo se tiver itens opcionais."),(0,i.kt)("h2",{id:"picktype-keys"},"Pick",(0,i.kt)("inlineCode",{parentName:"h2"},"<Type, Keys>")),(0,i.kt)("p",null,"Voc\xea consegue construir uma interface apenas com as propriedades que voc\xea quer, referenciando o Tipo e as chaves desse tipo que voc\xea quer."),(0,i.kt)("h2",{id:"omittype-keys"},"Omit",(0,i.kt)("inlineCode",{parentName:"h2"},"<Type, Keys>")),(0,i.kt)("p",null,"Oposto do Pick, aqui voc\xea decide o que quer ocultar da interface."),(0,i.kt)("h2",{id:"recordkeystype"},"Record",(0,i.kt)("inlineCode",{parentName:"h2"},"<Keys,Type>")),(0,i.kt)("p",null,"Imaginemos que voc\xea tem uma interface onde as chaves s\xe3o n\xfameros, e todos eles seguem um formato de ter como valor um objeto com duas strings, aqui voc\xea pode definir isso sem maiores problemas. A ideia \xe9 criar um tipo repet\xedvel."))}y.isMDXComponent=!0},8209:(e,t,r)=>{r(7294)}}]);